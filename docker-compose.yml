services:
  catalogue-db:
    image: f3lin/catalogue-db:v0.1.1
    hostname: catalogue-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=default_password
      - MYSQL_DATABASE=socksdb
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  catalogue:
    image: f3lin/catalogue:v0.1.1
    hostname: catalogue
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    command: ["/app", "-port=80"]
    depends_on:
      catalogue-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-s", "http://localhost:80/health"]
      interval: 60s
      timeout: 15s
      retries: 10
      start_period: 40s

  carts-db:
    image:  mongo:3.4
    hostname: carts-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  carts:
    image: weaveworksdemos/carts:0.4.8
    hostname: carts
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
    depends_on:
      carts-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD","wget", "-s", "http://localhost:80"]
      timeout: 15s
      retries: 10
      start_period: 40s

  orders-db:
    image: mongo:3.4
    hostname: orders-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  orders:
    image: f3lin/orders:v0.1.1
    hostname: orders
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms128m -Xmx256m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
    depends_on:
      orders-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:80/health || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 60s

  shipping:
    image: f3lin/shipping:v0.1.1
    hostname: shipping
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid

  queue-master:
    image: f3lin/queue-master:v0.1.1
    hostname: queue-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid

  rabbitmq:
    image: rabbitmq:3
    hostname: rabbitmq
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true

  payment:
    image: f3lin/payment:v0.1.1
    hostname: payment
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    entrypoint:
      - /app
    command:
      - -port=80
      - -decline=999

  user-db:
    image: f3lin/user-db:v0.1.1
    hostname: user-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid

  user:
    image: f3lin/user:v0.1.1
    hostname: user
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    command: ["/user", "-port=80"]
    environment:
      - MONGO_HOST=user-db:27017
      
  front-end:
    image: f3lin/front-end:v1.1
    hostname: front-end
    restart: always
    cap_drop:
      - all
    read_only: true
    depends_on:
      catalogue:
        condition: service_healthy
      carts:
        condition: service_healthy
      orders:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8079 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  edge-router:
    image: weaveworksdemos/edge-router:0.1.1
    ports:
      - '80:80'
      - '8080:8080'
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true
    tmpfs:
      - /var/run:rw,noexec,nosuid
    hostname: edge-router
    restart: always
    depends_on:
      front-end:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-s", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5

  user-sim:
    image: weaveworksdemos/load-test:0.1.1
    cap_drop:
      - all
    read_only: true
    hostname: user-simulator
    command: "-d 60 -r 200 -c 2 -h edge-router"
    depends_on:
      edge-router:
        condition: service_healthy